;/**************************************
;Project : Stavovy procesor
;Author  : Juraj Fojtik
;Chip type           : ATtiny26L
;Clock frequency     : 1,000 MHz
;**************************************/
;//------------kniznice-------
;#include <tiny26.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000004 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x18
;PCODE: $00000007 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000008 VOL: 0
	#endif
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
;#include <delay.h>
;#define ADC_VREF_TYPE 0x20
;//---------------------------
;unsigned char read_adc(unsigned char adc_input)
; 0000 000D {

	.CSEG
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 000E ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000F // Delay needed for the stabilization of the ADC input voltage
; 0000 0010 delay_us(10);
;PCODE: $00000011 VOL: 0
; 0000 0011 // Start the AD conversion
; 0000 0012 ADCSR|=0x40;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0013 // Wait for the AD conversion to complete
; 0000 0014 while ((ADCSR & 0x10)==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0015 ADCSR|=0x10;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0016 return ADCH;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0017 }
;PCODE: $00000024 VOL: 0
;//inicializacia mikroprocesora
;void init_attiny26(){
; 0000 0019 void init_attiny26(){
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001A // Input/Output Ports initialization
; 0000 001B // Port A initialization
; 0000 001C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 001D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 001E PORTA=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001F DDRA=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0020 
; 0000 0021 // Port B initialization
; 0000 0022 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=Out Func0=Out
; 0000 0023 // State7=T State6=T State5=T State4=T State3=T State2=T State1=0 State0=0
; 0000 0024 PORTB=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0025 DDRB=0x8F;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0026 
; 0000 0027 // Timer/Counter 0 initialization
; 0000 0028 // Clock source: System Clock
; 0000 0029 // Clock value: Timer 0 Stopped
; 0000 002A TCCR0=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002B TCNT0=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 002C 
; 0000 002D // Timer/Counter 1 initialization
; 0000 002E // Clock source: System Clock
; 0000 002F // Clock value: Timer 1 Stopped
; 0000 0030 // Mode: Normal top=FFh
; 0000 0031 // OC1A output: Disconnected
; 0000 0032 // OC1B output: Disconnected
; 0000 0033 // Timer 1 Overflow Interrupt: Off
; 0000 0034 // Compare A Match Interrupt: Off
; 0000 0035 // Compare B Match Interrupt: Off
; 0000 0036 PLLCSR=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0037 TCCR1A=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0038 TCCR1B=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0039 TCNT1=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003A OCR1A=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003B OCR1B=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003C OCR1C=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003D 
; 0000 003E // External Interrupt(s) initialization
; 0000 003F // INT0: Off
; 0000 0040 // Interrupt on any change on pins PA3, PA6, PA7 and PB4-7: Off
; 0000 0041 // Interrupt on any change on pins PB0-3: Off
; 0000 0042 GIMSK=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0043 MCUCR=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0044 
; 0000 0045 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0046 TIMSK=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0047 
; 0000 0048 // Universal Serial Interface initialization
; 0000 0049 // Mode: Disabled
; 0000 004A // Clock source: Register & Counter=no clk.
; 0000 004B // USI Counter Overflow Interrupt: Off
; 0000 004C USICR=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004D 
; 0000 004E // Analog Comparator initialization
; 0000 004F // Analog Comparator: Off
; 0000 0050 ACSR=0x80;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0051 
; 0000 0052 // ADC initialization
; 0000 0053 // ADC Clock frequency: 500,000 kHz
; 0000 0054 // ADC Voltage Reference: AVCC pin
; 0000 0055 // Only the 8 most significant bits of
; 0000 0056 // the AD conversion result are used
; 0000 0057 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0058 ADCSR=0x81;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0059 }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;//-----------------------
;int bateriamin[4];
;int bateriamin_indik[4];
;int motorymin;
;int kriticalmot;
;int cas;
;int poc = 0;
;unsigned char mot1x;
;unsigned char mot2x;
;unsigned char mot3x;
;unsigned char mot4x;
;int poc1=3;

	.DSEG
;//-----------------------
;//Ukazka vstupov a vystupov
;/*
;********Baterie************
;ADC3 <<----- Bat1
;ADC4 <<----- Bat2
;ADC5 <<----- Bat3
;ADC6 <<----- Bat4
;********Motory*************
;ADC0 <<----- Mot1
;ADC1 <<----- Mot2
;ADC2 <<----- Mot3
;ADC9 <<----- Mot4
;*******Vystupy*************
;PORTB.2 ------>> LED zelena
;PORTB.3 ------>> LED cervena
;PORTB.0 ------>> Bateria kriticky stav
;PORTB.1 ------>> Motor kriticky stav
;***************************
;*/
;//Definovanie------------
;#define Bat1 read_adc(3)
;#define Bat2 read_adc(4)
;#define Bat3 read_adc(5)
;#define Bat4 read_adc(6)
;//-----------------------
;#define Mot1 read_adc(0)
;#define Mot2 read_adc(1)
;#define Mot3 read_adc(2)
;#define Mot4 read_adc(9)
;//-----------------------
;#define Led_G PORTB.1
;#define Led_R PORTB.2
;//-----------------------
;#define Batx PORTB.3
;#define Motx PORTB.0
;//-----------------------
;void main(void)
; 0000 008C {

	.CSEG
;PCODE: $00000051 VOL: 0
; 0000 008D //--Kriticke napätie baterii--
; 0000 008E bateriamin[0] = 200;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 008F bateriamin[1] = 200;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0090 bateriamin[2] = 213;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0091 bateriamin[3] = 213;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0092 //--Indikovanie stavu baterii--
; 0000 0093 bateriamin_indik[0] = 220;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0094 bateriamin_indik[1] = 220;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0095 bateriamin_indik[2] = 230;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0096 bateriamin_indik[3] = 230;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0097 //-------------------------
; 0000 0098 cas = 4;          //cas ktory moze prekrocit prud na motoroch
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0099 motorymin = 12;      //prud na motoroch
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 009A //-------------------------
; 0000 009B init_attiny26();    // inicializacia mikroprocesor
;PCODE: $00000072 VOL: 0
; 0000 009C //-----------------------------
; 0000 009D //Baterie OK        -   B0 = 1
; 0000 009E //Baterie Vyp       -   B0 = 0
; 0000 009F //Prud motor Ok     -   B1 = 1
; 0000 00A0 //Prud motor Vyp    -   B1 = 0
; 0000 00A1 //-----------------------------
; 0000 00A2 while(1){
;PCODE: $00000073 VOL: 0
; 0000 00A3 //------------------kriticke stavy-----------------------------------------
; 0000 00A4 /*
; 0000 00A5         if (Bat1 > bateriamin[0] & Bat2 > bateriamin[1] &
; 0000 00A6             Bat3 > bateriamin[2] & Bat4 > bateriamin[3]){
; 0000 00A7             Batx = 1;
; 0000 00A8         }
; 0000 00A9         else{
; 0000 00AA             Batx = 0;
; 0000 00AB         }
; 0000 00AC         */
; 0000 00AD /*
; 0000 00AE if (poc1 == 0){
; 0000 00AF //------------------indikacia baterie--------------------------------------
; 0000 00B0         if (Bat1 > bateriamin_indik[0] & Bat2 > bateriamin_indik[1] &
; 0000 00B1             Bat3 > bateriamin_indik[2] & Bat4 > bateriamin_indik[3]){
; 0000 00B2 //-----------------------------
; 0000 00B3             Led_G = 1;
; 0000 00B4             Led_R = 0;
; 0000 00B5 //-----------------------------
; 0000 00B6         }
; 0000 00B7         else{
; 0000 00B8 //-----------------------------
; 0000 00B9             Led_G = 0;
; 0000 00BA             Led_R = 1;
; 0000 00BB //-----------------------------
; 0000 00BC         }
; 0000 00BD         poc1 = 1000;
; 0000 00BE }
; 0000 00BF else
; 0000 00C0     poc1 = poc1-1;
; 0000 00C1 */
; 0000 00C2 //Nacitaj stav-----------------
; 0000 00C3 //------------------Prudove obmedzenie motorov-----------------------------
; 0000 00C4        while (Mot1 > motorymin | Mot2 > motorymin |
;PCODE: $00000074 VOL: 0
; 0000 00C5                Mot3 > motorymin | Mot4 > motorymin){
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00C6 //--------------------------------
; 0000 00C7                 poc++;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00C8                 Led_G = 1;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00C9                 Led_R = 1;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 00CA                 if (poc > cas)
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00CB                 {
; 0000 00CC                     Motx = 0;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00CD                     delay_ms(70);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00CE                 }
; 0000 00CF //Nacitaj stav-----------------------------
; 0000 00D0                 delay_us(60);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00D1                 delay_ms(49);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00D2 
; 0000 00D3 //-----------------------------------------
; 0000 00D4             }
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00D5         poc = 0;    //nulovanie pocitadlo
;PCODE: $000000B1 VOL: 0
; 0000 00D6         Motx = 1;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00D7                 Led_G = 0;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00D8                 Led_R = 0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00D9 //-------------------------------------------------------------------------
; 0000 00DA       };
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00DB //-------------------------------------------------------------------------
; 0000 00DC }
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
